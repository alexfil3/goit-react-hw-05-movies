{"version":3,"file":"static/js/969.627434b1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","webpack://react-homework-template/./src/components/SearchMovieList/SearchMovieList.module.css?1b4a","components/SearchMovieList/SearchMovieList.jsx","pages/Movies/Movies.jsx","services/moviesAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\",\"item\":\"Movies_item__Ba4aJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SearchMovieList_item__VT5C8\"};","import css from './SearchMovieList.module.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst SearchMovieList = ({ searchMovie = [] }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {searchMovie.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`${id}`} state={{ from: location }} className={css.item}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default SearchMovieList;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport API from 'services/moviesAPI';\nimport css from './Movies.module.css';\nimport SearchMovieList from 'components/SearchMovieList/SearchMovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('name') ?? '';\n  const [movie, setMovie] = useState(searchParams.get('name') ?? '');\n  const [searchMovie, setSearchMovie] = useState([]);\n\n  useEffect(() => {\n    if (movie === '') return;\n\n    const fetchMovies = async () => {\n      try {\n        const movies = await API.search(movie);\n        setSearchMovie(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [movie]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setMovie(searchParams.get('name'));\n  };\n\n  const updateQueryString = e => {\n    const movieIdValue = e.target.value;\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ name: movieIdValue });\n    if (searchParams.get('name') === null) {\n      setSearchMovie([]);\n    }\n  };\n\n  return (\n    <main>\n      <form onSubmit={onSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={updateQueryString}\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.button}>\n          Search\n        </button>\n      </form>\n      {searchMovie && searchParams.get('name') !== null && (\n        <SearchMovieList searchMovie={searchMovie} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nclass fetchApi {\n  #URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = 'd9b22b66e437cf83ab7d8ce61de5c8ef';\n  #TRAND = 'trending/movie/day';\n  #DETAILS = 'movie/';\n  #CREDITS = '/credits';\n  #REVIEWS = '/reviews';\n  #SEARCH = 'search/movie';\n\n  trand = async () => {\n    const response = await axios.get(\n      `${this.#URL}${this.#TRAND}?api_key=${this.#API_KEY}`\n    );\n    return response.data.results;\n  };\n\n  details = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}?api_key=${this.#API_KEY}`\n    );\n    return response.data;\n  };\n\n  credits = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}${this.#CREDITS}?api_key=${\n        this.#API_KEY\n      }`\n    );\n    return response.data.cast;\n  };\n\n  reviews = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}${this.#REVIEWS}?api_key=${\n        this.#API_KEY\n      }`\n    );\n\n    return response.data.results;\n  };\n\n  search = async movieName => {\n    const response = await axios.get(\n      `${this.#URL}${this.#SEARCH}?api_key=${this.#API_KEY}&query=${movieName}`\n    );\n    \n    return response.data.results\n  };\n}\n\nconst API = new fetchApi();\nexport default API;\n"],"names":["searchMovie","location","useLocation","map","id","title","to","state","from","className","css","useSearchParams","searchParams","setSearchParams","query","get","useState","movie","setMovie","setSearchMovie","useEffect","fetchMovies","API","movies","console","log","onSubmit","e","preventDefault","type","value","onChange","movieIdValue","target","name","fetchApi","trand","axios","response","data","results","details","movieId","credits","cast","reviews","search","movieName"],"sourceRoot":""}