{"version":3,"file":"static/js/218.3673f00d.chunk.js","mappings":"+PAWA,EATe,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACE,4BACE,oCAAYD,MACZ,uBAAIC,MAGT,EC8BD,EAlCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,SAArC,eAAOG,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6GAEYC,EAAAA,EAAAA,QAAYT,GAFxB,OAEXU,EAFW,OAGjBN,EAAWM,GACXJ,EAAU,UAJO,gDAMjBK,QAAQC,IAAR,MANiB,yDAAH,qDASlBJ,GACD,GAAE,CAACR,IAGS,WAAXK,IACCF,EAAQU,OAAS,GAChB,wBACGV,EAAQW,KAAI,gBAAGhB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASgB,EAApB,EAAoBA,GAApB,OACX,yBACE,SAAC,EAAD,CAAQjB,OAAQA,EAAQC,QAASA,KAD1BgB,EADE,OAOf,oEAGL,C,8OCnCKC,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,IAAAA,IAAAA,EAAAA,MAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,OAAAA,eAAAA,KAAAA,EAAAA,CAAAA,UAAAA,EAAAA,MACG,kFACI,qFACF,uEACE,2DACA,6DACA,6DACD,sBAEVC,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAQ,oGACiBC,EAAAA,EAAAA,IAAA,kBAClB,EADkB,sBACN,EADM,kCACiB,EADjB,QADjB,cACAC,EADA,yBAICA,EAASC,KAAKC,SAJf,gDAORC,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMtB,GAAN,uFACekB,EAAAA,EAAAA,IAAA,kBAClB,EADkB,sBACN,EADM,cACUlB,EADV,4BAC6B,EAD7B,QADf,cACFmB,EADE,yBAIDA,EAASC,MAJR,8FAAVE,GAAU,KAOVC,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMvB,GAAN,uFACekB,EAAAA,EAAAA,IAAA,kBAClB,EADkB,sBACN,EADM,cACUlB,GADV,eACoB,EADpB,kCAEnB,EAFmB,QADf,cACFmB,EADE,yBAMDA,EAASC,KAAKI,MANb,8FAAVD,GAAU,KASVpB,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMH,GAAN,uFACekB,EAAAA,EAAAA,IAAA,kBAClB,EADkB,sBACN,EADM,cACUlB,GADV,eACoB,EADpB,kCAEnB,EAFmB,QADf,cACFmB,EADE,yBAODA,EAASC,KAAKC,SAPb,8FAAVlB,GAAU,KAUVsB,OAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAS,WAAMC,GAAN,uFACgBR,EAAAA,EAAAA,IAAA,kBAClB,EADkB,sBACN,EADM,kCACkB,EADlB,wBACyCQ,IAFzD,cACDP,EADC,yBAKAA,EAASC,KAAKC,SALd,8FAATI,EAAS,IASLhB,EAAM,IAAIO,EAChB,K","sources":["components/Review/Review.jsx","components/Reviews/Reviews.jsx","services/moviesAPI.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Review = ({ author, content }) => {\n  return (\n    <div>\n      <p>Author: {author}</p>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport default Review;\n\nReview.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'services/moviesAPI';\nimport Review from 'components/Review/Review';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('fetch');\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsContent = await API.reviews(movieId);\n        setReviews(reviewsContent);\n        setStatus('finish');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    status === 'finish' &&\n    (reviews.length > 0 ? (\n      <ul>\n        {reviews.map(({ author, content, id }) => (\n          <li key={id}>\n            <Review author={author} content={content} />\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p>We don't have any reviews for this movie</p>\n    ))\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nclass fetchApi {\n  #URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = 'd9b22b66e437cf83ab7d8ce61de5c8ef';\n  #TRAND = 'trending/movie/day';\n  #DETAILS = 'movie/';\n  #CREDITS = '/credits';\n  #REVIEWS = '/reviews';\n  #SEARCH = 'search/movie';\n\n  trand = async () => {\n    const response = await axios.get(\n      `${this.#URL}${this.#TRAND}?api_key=${this.#API_KEY}`\n    );\n    return response.data.results;\n  };\n\n  details = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}?api_key=${this.#API_KEY}`\n    );\n    return response.data;\n  };\n\n  credits = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}${this.#CREDITS}?api_key=${\n        this.#API_KEY\n      }`\n    );\n    return response.data.cast;\n  };\n\n  reviews = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}${this.#REVIEWS}?api_key=${\n        this.#API_KEY\n      }`\n    );\n\n    return response.data.results;\n  };\n\n  search = async movieName => {\n    const response = await axios.get(\n      `${this.#URL}${this.#SEARCH}?api_key=${this.#API_KEY}&query=${movieName}`\n    );\n    \n    return response.data.results\n  };\n}\n\nconst API = new fetchApi();\nexport default API;\n"],"names":["author","content","movieId","useParams","useState","reviews","setReviews","status","setStatus","useEffect","fetchReviews","API","reviewsContent","console","log","length","map","id","fetchApi","trand","axios","response","data","results","details","credits","cast","search","movieName"],"sourceRoot":""}